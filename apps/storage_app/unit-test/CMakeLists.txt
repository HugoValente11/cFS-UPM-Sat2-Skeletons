##################################################################
#
# Coverage Unit Test build recipe
#
# This CMake file contains the recipe for building the Storage unit tests.
# It is invoked from the parent directory when unit tests are enabled.
#
##################################################################

#
#
# NOTE on the subdirectory structures here:
#
# - "inc" provides local header files shared between the coveragetest,
#    wrappers, and overrides source code units
# - "coveragetest" contains source code for the actual unit test cases
#    The primary objective is to get line/path coverage on the FSW
#    code units.
#
 # Unit test CMake file for function Storage
 # Generated by TASTE on 2024-09-03 17:25:34
 # You can edit this file, it will not be overwritten

# Use the UT assert public API, and allow direct
# inclusion of source files that are normally private
include_directories(${PROJECT_SOURCE_DIR}/fsw/src)
include_directories(${CMAKE_CURRENT_SOURCE_DIR}/inc)
include_directories(${CMAKE_CURRENT_SOURCE_DIR}/stubs)



# Add a coverage test executable called "storage_app-ALL" that
# covers all of the functions in storage_app.
#
# Also note in a more complex app/lib the coverage test can also
# be broken down into smaller units (in which case one should use
# a unique suffix other than "ALL" for each unit).  For example,
# OSAL implements a separate coverage test per source unit.
add_cfe_coverage_test(storage_app ALL
    "coveragetest/coveragetest_storage_app.c"
    "../fsw/src/storage_app.c"
    ${CMAKE_CURRENT_SOURCE_DIR}/stubs/cfe_es_global_stubs.c
)

# The storage_app uses library functions provided by dataview_lib so must be linked
# with the dataview_lib stub library
add_cfe_coverage_dependency(storage_app ALL dataview_lib)
